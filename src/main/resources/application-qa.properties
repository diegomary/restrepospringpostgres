server.port=8079
spring.application.name=DMscQA
##############################################################################
# Important: in commandline just run as follows:
# mvn spring-boot:run -Dspring-boot.run.profiles=qa
# to run the jar with the specified profile just type:
# java -jar file.jar --spring.profiles.active=qa
# or in alternative run
# java -jar -Dspring.profiles.active=qa a.jar
# IMPORTANT: if the packaging has been done to obtain a war file. It can be run also as an
#executable using the following commandline:
# java -jar a.war --spring.profiles.active=qa
##################################################################################
#mongodb configuration
spring.data.mongodb.database= diegomary88
spring.data.mongodb.host= ds061371.mlab.com
spring.data.mongodb.password=Atreius@62
spring.data.mongodb.port= 61371
spring.data.mongodb.username= palla
# POSTGRES CONFIGURATION  ##################################################################################################
# Postgres docker configuration
# THe image
# https://hub.docker.com/_/postgres/
#the container to run which will create a db named postgres with user = postgres
# docker run -p 5432:5432/tcp --name dm88 -e POSTGRES_PASSWORD=secret -d postgres
spring.datasource.platform=postgres
spring.datasource.url= jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=secret
# Hibernate properties
# Disable feature detection by this undocumented parameter.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.show-sql = false
spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql=true
# END POSTGRES CONFIGURATION  ##################################################################################################
